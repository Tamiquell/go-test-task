openapi: 3.0.3

info:
  title: OpenAPi specs
  description: API specification for User-managing API
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1
    description: development server 

paths:
  /user:
    get:
      operationId: getUsers
      description: Returns all users
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/User'
                  
      security:
        - basicAuth: []
        
             
    post:
      operationId: createUser
      description: Creates a new user
      requestBody:
        description: User object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
           description: Invalid input 
      security:
        - basicAuth: []
  /user{id}:
    get:
      operationId: getUser
      description: Returns a user
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
      security:
        - basicAuth: []
    put:
      operationId: updateUser
      description: Updates a user
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          schema:
            type: string
      requestBody:
        description: User object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '404':
          description: User not found
      security:
        - basicAuth: []
    delete:
      operationId: deleteUser
      description: Deletes a user
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found
      security:
        - basicAuth: []

components: 
  schemas: 
    User:
      description: User represents the user for this application
      properties: 
        admin:
          description: the admin status for this user
          type: boolean
          x-go-name: Admin
        email:
          description: the email for this user
          type: string
          x-go-name: Email
        id:
          description: the id for this user
          type: string
          x-go-name: ID
        password:
          description: the password for this user
          type: string
          x-go-name: Password
        username:
          description: the username for this user
          type: string
          x-go-name: Username
      required:
        - id
        - email
        - username
        - password
        - admin
      type: object
      x-go-package: github/Tamiquell/go-test-task/api

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic


